{"version":3,"sources":["musics.js"],"names":[],"mappings":"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","file":"musics-compiled.js","sourcesContent":["/**\n * Created by jonathan on 30/05/16.\n */\n'use strict';\nconst express = require('express');\nconst router = express.Router();\nconst musicsController = require('../controllers/musics-controller');\n\n/* GET home page. */\nrouter.get('/', (req, res, next) => {\n    musicsController.list()\n        .then((musics)=>{\n\n        \tif (musics.length > 0) {\n\t            res.json({\n\t                success: true,\n\t                data: musics\n\t            });\n\t        }\n\t        else {\n\t        \tres.json({\n\t                success: false,\n\t                data: musics\n\t            });\t\n\t        }\n        })\n        .catch((err)  => {\n            res.json({\n                success: false,\n                data: err\n            });\n        });\n});\n\nrouter.get('/artist/:nameArtist', (req, res, next) => {\n    let nameArtist = req.params.nameArtist || '';\n\n    musicsController.listByArtist(nameArtist)\n        .then((musics)=>{\n\n        \tif (musics.length > 0) {\n\t            res.json({\n\t                success: true,\n\t                data: musics\n\t            });\n            }\n\t        else {\n\t        \tres.json({\n\t                success: false,\n\t                data: musics\n\t            });\t\n\t        }\n        })\n        .catch((err)  => {\n            res.json({\n                success: false,\n                data: err\n            });\n        });\n\n});\n\nrouter.get('/music/:nameMusic', (req, res, next) => {\n    let nameMusic = req.params.nameMusic || '';\n\n    musicsController.listByMusic(nameMusic)\n        .then((musics)=>{\n\n        \tif (musics.length > 0) {\n\t            res.json({\n\t                success: true,\n\t                data: musics\n\t            });\n            }\n\t        else {\n\t        \tres.json({\n\t                success: false,\n\t                data: musics\n\t            });\t\n\t        }\n        })\n        .catch((err)  => {\n            res.json({\n                success: false,\n                data: err\n            });\n        });\n});\n\nrouter.get('/artist/:nameArtist/music/:nameMusic', (req, res, next) => {\n    let nameArtist = req.params.nameArtist || '';\n    let nameMusic = req.params.nameMusic || '';\n\n    musicsController.listByMusicAndArtist(nameArtist, nameMusic)\n        .then((musics)=>{\n            if (musics.length > 0) {\n\t            res.json({\n\t                success: true,\n\t                data: musics\n\t            });\n            }\n\t        else {\n\t        \tres.json({\n\t                success: false,\n\t                data: musics\n\t            });\t\n\t        }\n        })\n        .catch((err)  => {\n            res.json({\n                success: false,\n                data: err\n            });\n        });\n});\n\nrouter.get('/all/artist/:nameArtist/music/:nameMusic', (req, res, next) => {\n    let nameArtist = req.params.nameArtist || '';\n    let nameMusic = req.params.nameMusic || '';\n\n    musicsController.listByMusicOrArtist(nameArtist, nameMusic)\n        .then((musics)=>{\n            if (musics.length > 0) {\n                res.json({\n                    success: true,\n                    data: musics\n                });\n            }\n            else {\n                res.json({\n                    success: false,\n                    data: musics\n                }); \n            }\n        })\n        .catch((err)  => {\n            res.json({\n                success: false,\n                data: err\n            });\n        });\n});\n\nmodule.exports = router;"]}